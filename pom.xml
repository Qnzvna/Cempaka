<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.cempaka.cyclone</groupId>
    <artifactId>cyclone</artifactId>
    <version>0.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Cyclone Project</name>
    <description>Pure java open source application made to load test and measure performance of systems.</description>
    <url>https://github.com/Qnzvna/Cempaka</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Damian Serwin</name>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>Europe/Warsaw</timezone>
        </developer>
    </developers>

    <modules>
        <module>cyclone-core</module>
        <module>cyclone-cli</module>
        <module>cyclone-examples</module>
        <module>cyclone-daemon</module>
        <module>cyclone-plugins</module>
        <module>cyclone-client</module>
    </modules>

    <scm>
        <connection>scm:git:git://github.com/Qnzvna/Cempaka.git</connection>
        <developerConnection>scm:git:git@github.com:Qnzvna/Cempaka.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/Qnzvna/Cempaka.git</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>1.8</java.version>
        <encoding>UTF-8</encoding>

        <guava.version>30.0-jre</guava.version>
        <immutables.version>2.8.8</immutables.version>
        <picocli.version>4.5.2</picocli.version>
        <jersey.version>2.25.1</jersey.version>
        <dropwizard.version>1.3.27</dropwizard.version>
        <guice.version>4.2.3</guice.version>
        <metrics-core.version>3.0.2</metrics-core.version>
        <httpclient.version>4.5.13</httpclient.version>
        <postgresql.version>42.2.18</postgresql.version>
        <jdbi3.version>3.18.0</jdbi3.version>
        <flyway.version>7.3.1</flyway.version>
        <jackson.version>2.12.0</jackson.version>
        <jooq.version>3.14.4</jooq.version>
        <slf4j.version>1.7.30</slf4j.version>
        <javax.annotation.version>1.2</javax.annotation.version>
        <dropwizard-webjars-bundle.version>1.3.5</dropwizard-webjars-bundle.version>

        <junit.version>4.13.1</junit.version>
        <assertj-core.version>3.18.1</assertj-core.version>
        <awaitility.version>4.0.3</awaitility.version>
        <httpmime.version>4.5.13</httpmime.version>
        <jacoco.version>0.8.5</jacoco.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <mockito-junit-jupiter.version>3.6.28</mockito-junit-jupiter.version>

        <angularjs.version>1.7.7</angularjs.version>
        <bootstrap.version>4.3.1</bootstrap.version>
        <font-awesome.version>5.7.2</font-awesome.version>
        <ngtoast.version>1.5.6</ngtoast.version>
        <ng-file-upload.version>12.0.4</ng-file-upload.version>
        <lodash.version>4.17.15</lodash.version>
        <jquery.version>3.4.1</jquery.version>
        <ui-bootstrap4.version>3.0.6</ui-bootstrap4.version>
        <momentjs.version>2.24.0</momentjs.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.immutables</groupId>
                <artifactId>value</artifactId>
                <version>${immutables.version}</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>${picocli.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-core</artifactId>
                <version>${dropwizard.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.hk2.external</groupId>
                        <artifactId>javax.inject</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.glassfish.hk2.external</groupId>
                        <artifactId>aopalliance-repackaged</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-assets</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-forms</artifactId>
                <version>${dropwizard.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.hk2.external</groupId>
                        <artifactId>javax.inject</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-auth</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-jdbi3</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard-bundles</groupId>
                <artifactId>dropwizard-webjars-bundle</artifactId>
                <version>${dropwizard-webjars-bundle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codahale.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${metrics-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-core</artifactId>
                <version>${jdbi3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-jackson2</artifactId>
                <version>${jdbi3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-sqlobject</artifactId>
                <version>${jdbi3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-guava</artifactId>
                <version>${jdbi3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-postgres</artifactId>
                <version>${jdbi3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>angularjs</artifactId>
                <version>${angularjs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>font-awesome</artifactId>
                <version>${font-awesome.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>ng-file-upload</artifactId>
                <version>${ng-file-upload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.bower</groupId>
                <artifactId>ngtoast</artifactId>
                <version>${ngtoast.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.webjars.bower</groupId>
                        <artifactId>angular</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bower</groupId>
                        <artifactId>angular-animate</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bower</groupId>
                        <artifactId>angular-sanitize</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>lodash</artifactId>
                <version>${lodash.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${jquery.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>ui-bootstrap4</artifactId>
                <version>${ui-bootstrap4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>momentjs</artifactId>
                <version>${momentjs.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpmime.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                    <configuration>
                        <generator>
                            <database>
                                <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
                                <properties>
                                    <property>
                                        <key>scripts</key>
                                        <value>src/main/resources/db/migration/*.sql</value>
                                    </property>
                                    <property>
                                        <key>sort</key>
                                        <value>semantic</value>
                                    </property>
                                    <property>
                                        <key>unqualifiedSchema</key>
                                        <value>none</value>
                                    </property>
                                    <property>
                                        <key>defaultNameCase</key>
                                        <value>lower</value>
                                    </property>
                                </properties>
                            </database>
                            <target>
                                <packageName>org.cempaka.cyclone.jooq</packageName>
                            </target>
                        </generator>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jooq</groupId>
                            <artifactId>jooq-meta-extensions</artifactId>
                            <version>${jooq.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <encoding>${encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <skipIfEmpty>true</skipIfEmpty>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>2.10.0</version>
                    <configuration>
                        <createBackupFile>false</createBackupFile>
                        <expandEmptyElements>false</expandEmptyElements>
                        <keepBlankLines>true</keepBlankLines>
                        <lineLength>120</lineLength>
                        <lineSeparator>\n</lineSeparator>
                        <nrOfIndentSpace>4</nrOfIndentSpace>
                        <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                        <sortPlugins>none</sortPlugins>
                        <sortDependencies>none</sortDependencies>
                        <verifyFail>Stop</verifyFail>
                    </configuration>
                    <executions>
                        <execution>
                            <id>sort-pom</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <additionalOptions>-Xdoclint:none</additionalOptions>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <configuration>
                        <parallel>classes</parallel>
                        <threadCount>8</threadCount>
                        <includes>
                            <include>**/*Test*</include>
                        </includes>
                        <excludes>
                            <exclude>**/*BigTest*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>small-tests</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <phase>test</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.31.0</version>
                    <configuration>
                        <showLogs>true</showLogs>
                        <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                        <images>
                            <image>
                                <alias>postgres</alias>
                                <name>postgres:9.5.16-alpine</name>
                                <run>
                                    <env>
                                        <POSTGRES_USER>cyclone</POSTGRES_USER>
                                        <POSTGRES_PASSWORD>cyclone</POSTGRES_PASSWORD>
                                    </env>
                                    <wait>
                                        <log>database system is ready to accept connections</log>
                                        <time>20000</time>
                                    </wait>
                                    <network>
                                        <mode>custom</mode>
                                        <name>cyclone-it</name>
                                        <alias>postgres</alias>
                                    </network>
                                </run>
                            </image>
                            <image>
                                <alias>cyclone</alias>
                                <name>cempaka/cyclone:${project.version}</name>
                                <run>
                                    <hostname>cyclone</hostname>
                                    <ports>
                                        <port>127.0.0.1:8080:8000</port>
                                    </ports>
                                    <wait>
                                        <http>
                                            <url>http://127.0.0.1:8080/api/cluster/status</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>20000</time>
                                    </wait>
                                    <network>
                                        <mode>custom</mode>
                                        <name>cyclone-it</name>
                                        <alias>cyclone</alias>
                                    </network>
                                    <volumes>
                                        <bind>
                                            <volume>${project.build.directory}/:/jacoco</volume>
                                        </bind>
                                    </volumes>
                                    <entrypoint>
                                        <exec>
                                            <arg>java</arg>
                                            <arg>
                                                -javaagent:/jacoco/dependency/jacoco-agent.jar=output=file,append=false,dumponexit=true,destfile=/jacoco/jacoco-it.exec
                                            </arg>
                                            <arg>-jar</arg>
                                            <arg>/opt/cyclone/cyclone-daemon.jar</arg>
                                            <arg>server</arg>
                                            <arg>/etc/cyclone/configuration.yml</arg>
                                        </exec>
                                    </entrypoint>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <executions>
                        <execution>
                            <id>big-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <phase>integration-test</phase>
                            <configuration>
                                <includes>
                                    <include>**/*BigTest*</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>org.cempaka.cyclone.jooq.*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>prepare-package</phase>
                        </execution>
                        <execution>
                            <id>report-integration</id>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                        <arguments>-Dmaven.test.skip=true</arguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.13</version>
                    <configuration>
                        <dockerfile>docker/Dockerfile</dockerfile>
                        <repository>cempaka/cyclone</repository>
                        <tag>${project.version}</tag>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>build</goal>
                                <goal>tag</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-release-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
